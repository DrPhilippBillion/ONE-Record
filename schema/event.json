{
	"@context": {
    	"@vocab": "https://raw.githubusercontent.com/IATA-Cargo/ONE-Record/master/schema/event/",
    	"type": "@type",
    	"id": "@id"
    },
    "id": {
        "description": "URI of this logistics object",
         "required": true,
         "type": "text"
    },
    "type":  {
        "description": "Type of losgistics object, e.g. air waybill, booking, etc",
         "required": true,
         "type": "text"
    },
    "typeCode":  {
        "description": "Commonly useed codes for document type, e.g. jfwb, jfhl etc. Leave nlank if unknown",
        "type": "text"
    },
    "issuedBy":  {
        "description": "Internet of logistics identity code of issuing party.",
        "required": true,
        "type": "text"
    },
    "key":  {
        "description": "JSON field name of code that identifies this logistics object, e.g. 'waybill number', 'UPID' etc.",
        "required": true,
        "type": "text"
    },
    "event":
      {
      "LineID": {
         "description": "Unique line identifier",
         "required": true,
         "type": "numeric"
      },
      "FlagScheduledEstimatedActual": {
         "description": "Flag to indicate whether this line is scheduled, estimated or actual (=performed)",
         "required": true,
         "type": "text"
      },
      "DateTime": {
         "description": "Date and time of the event",
         "required": true,
         "type": "datatime"
      },
      "SequenceNumber": {
         "description": "Sequence number of the event / movement for this piece",
         "type": "numeric"
      },
      "Company": {
         "description": "Company performing the event / movement",
         "type": "undefined"
      },
      "Location": {
         "description": "Location details",
         "type": "undefined"
      },
      "EventCode": {
         "description": "Event or status code - e.g. DEP, ARR, RCS…",
         "type": "text"
      },
      "EventName": {
         "description": "If no EventCode provided, event name - e.g. Loading, Unloading…",
         "type": "text"
      },
      "DiscrepancyCode": {
         "description": "Code indicating a specific discrepancy ",
         "type": "text"
      },
      "ServiceCode": {
         "description": "Code to identify cargo products / service invoiced by carrier / freight forwarder",
         "type": "text"
      },
      "CarriageStage": {
         "description": "Carriage stage - e.g. Pre-Carriage, Main-Carriage, On-Carriage. Always defaults to Main-Carriage",
         "type": "text"
      },
      "ModeCode": {
         "description": "Mode of transport code following UNECE Recommendation N. 19 - Code for Modes of Transport ",
         "type": "text"
      },
      "Note": {
         "description": "Free text note",
         "type": "text"
      },
      "DataValidation": {
         "DataAcceptanceStatus": {
            "description": "Status of data - e.g. Received, Processed, Accepted, Rejected ",
            "type": "text"
         },
         "DataValidationStatus": {
            "description": "Validation status of data - e.g. Acknowledged (data OK), Warning (error detected and corrected), Error (error detected) ",
            "type": "text"
         },
         "DataErrorCode": {
            "description": "MIP (Message Improvement Program) Error / Warning code",
            "type": "text"
         },
         "DataErrorDescription": {
            "description": "If no ErrorCode provided, Error / Warning description",
            "type": "text"
         },
         "ErrorType": {
            "description": "Type of error - e.g from the Message Improvement Program (MIP)",
            "type": "text"
         },
         "FieldID": {
            "description": "Field identifier (if available)",
            "type": "text"
         },
         "FieldName": {
            "description": "Field name - e.g. Description",
            "type": "text"
         },
         "FieldPath": {
            "description": "Field path from the root of the message / document  - e.g. EVENT.TransportDetails.OtherDetails",
            "type": "text"
         },
         "ErroneousValue": {
            "description": "Erroneous / previous / original data value",
            "type": "text"
         },
         "CorrectValue": {
            "description": "Correct / new data value",
            "type": "text"
         }
      },
      "TransportDetails": {
         "TransportID": {
            "description": "Airline flight number or rail / truck / maritime line id",
            "type": "text"
         },
         "RegistrationID": {
            "description": "Vehicle identification - e.g. vehicle registration number",
            "type": "text"
         },
         "Type": {
            "description": "Vehicle or container type following United Nations Directories for Electronic Data Interchange Code List",
            "type": "text"
         },
         "Size": {
            "description": "Size of the vehicle - free text",
            "type": "text"
         },
         "Seal": {
            "description": "Seal identifier",
            "type": "text"
         },
         "SpaceAllocationDetails": {
            "description": "Space allocation request / action / confirmation code or details",
            "type": "text"
         },
         "AllotmentDetails": {
            "description": "Guaranteed Capacity reference details",
            "type": "text"
         },
         "ExceptionHandlingDetails": {
            "description": "Exception handling code or details",
            "type": "text"
         },
         "DeckPosition": {
            "description": "Position of the shipment in the aircraft - e.g. lower or main deck ",
            "type": "text"
         },
         "OtherDetails": [{
            "Code": {
               "description": "Data element code - e.g. CLR",
               "type": "text"
            },
            "Description": {
               "description": "Data element name - e.g. Color",
               "type": "text"
            },
            "Value": {
               "description": "Data element value - e.g. Black",
               "type": "text"
            }
         }]
      },
      "DataLogger": [{
         "DeviceUniqueID": {
            "description": "Data logger's unique identification",
            "type": "text"
         },
         "DeviceName": {
            "description": "Data logger's name - e.g. data logger manufacturer's brand and model",
            "type": "text"
         },
         "MeasurementParameter": {
            "description": "Parameter that is being measured - e.g. temperature, humidity, location…",
            "type": "text"
         },
         "MeasurementUnit": {
            "description": "Unit of measure - e.g. CEL…",
            "type": "text"
         },
         "ThresholdMinValue": {
            "description": "Minimum alert threshold to trigger warning if measurement falls below this level",
            "type": "numeric"
         },
         "ThresholdMaxValue": {
            "description": "Maximum alert threshold to trigger warning if measurement exceeds this level",
            "type": "numeric"
         },
         "ThresholdMinAction": {
            "description": "Free text - action to trigger if measured value falls below the ThresholdMinValue",
            "type": "text"
         },
         "ThresholdMaxAction": {
            "description": "Free text - action to trigger if measured value exceeds the ThresholdMaxValue",
            "type": "text"
         },
         "ThresholdNotification": {
            "description": "Company or person contact details for notification in case of value excursion",
            "type": "text"
         },
         "Measurement": [{
            "DateTime": {
               "description": "Date and time of measurement",
               "type": "datatime"
            },
            "MeasurementValue": {
               "description": "Value measured ",
               "type": "numeric"
            },
            "Geolocation": {
               "description": "Location details - e.g. geographic coordinates from GPS ",
               "type": "undefined"
            }
         }]
      }],
      "ReferenceDocument": {
         "description": "Reference document details",
         "type": "undefined"
      },
      "HandlingDetails": {
         "description": "Handling details scheduled or performed",
         "type": "undefined"
      },
      "CustomsDetails": {
         "description": "Customs Information details",
         "type": "undefined"
      }
   }
}